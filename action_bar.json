[
  {
    "title": "Anchored Pointer Action Bar",
    "description": "A single-file HTML demo showcasing a floating anchored pointer that follows hover/focus and selection across an action bar, constrained to the button height for a clean, glassy look.",
    "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Anchored Pointer Action Bar - Single File</title>\n    <!-- Material Symbols (Outlined) -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,300,0,0\" rel=\"stylesheet\">\n\n    <style>\n      /* Inlined from style.css (converted to valid CSS) */\n      :root {\n        --spring-easing: linear(0, 0.0018, 0.0069 1.15%, 0.026 2.3%, 0.0637, 0.1135 5.18%, 0.2229 7.78%, 0.5977 15.84%, 0.7014, 0.7904, 0.8641, 0.9228, 0.9676 28.8%, 1.0032 31.68%, 1.0225, 1.0352 36.29%, 1.0431 38.88%, 1.046 42.05%, 1.0448 44.35%, 1.0407 47.23%, 1.0118 61.63%, 1.0025 69.41%, 0.9981 80.35%, 0.9992 99.94%);\n      }\n\n      body {\n        background-color: #f0f0f0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        margin: 0;\n        font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;\n      }\n\n      .action-bar {\n        display: flex;\n        align-items: center;\n        background-color: #fcfcfc;\n        border: 1px solid lightgray;\n        border-radius: 1rem;\n        padding: 0.5rem;\n        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n        position: relative;\n      }\n\n      button {\n        position: relative;\n        padding: 10px 15px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: none;\n        background: none;\n        border-radius: 50px;\n        margin: 0 4px;\n        cursor: pointer;\n        transition: background-color 0.3s ease, color 0.3s ease;\n      }\n\n      button:hover,\n      button:focus {\n        background-color: #f5f5f5;\n      }\n\n      button:focus { outline: none; }\n\n      .selected {\n        background-color: #fcebeb;\n        color: red;\n      }\n\n      .selected:hover,\n      .selected:focus { background-color: #fcebeb; }\n\n      /* increase clickable area */\n      button::before {\n        content: '';\n        position: absolute;\n        inset: -0.4rem;\n      }\n\n      .material-symbols-outlined {\n        font-size: 24px;\n        font-variation-settings: 'FILL' 0, 'wght' 300, 'GRAD' 0, 'opsz' 24;\n        background: none;\n        transition: filter 0.1s ease;\n      }\n\n      .selected .material-symbols-outlined {\n        font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 0, 'opsz' 24;\n        filter: drop-shadow(0 0 4px tomato);\n      }\n\n      /* Anchored pointer styles (converted from nested syntax) */\n      .anchored-pointer {\n        position: absolute;\n        position-anchor: --selected;\n        top: anchor(top);\n        left: anchor(left);\n        width: 3rem;\n        /* Match the hovered/selected button height exactly */\n        height: anchor-size(height);\n        /* Align to the top of the anchored element without vertical offset */\n        margin-top: 0;\n        display: block;\n        background: none;\n        border: 0px solid white;\n        border-radius: 2rem;\n        transition: all 1s var(--spring-easing);\n        filter: drop-shadow(0 3px 6px gray);\n        pointer-events: none;\n        overflow: hidden;\n        backdrop-filter: url(#filter);\n      }\n\n      .anchored-pointer::before {\n        content: '';\n        position: absolute;\n        inset: 0;\n        background: radial-gradient(1rem 3rem ellipse at 50% 85% in oklch, oklch(100% 0 0 / 0%) 10% 50%, 150%, oklch(100% 0 0 / 100%) 175% 165%),\n                    radial-gradient(2rem 3.5rem ellipse at 45% 35% in oklch, oklch(0% 0 0 / 0%) 80%, gray 150%);\n      }\n    </style>\n  </head>\n  <body>\n    <!-- Design inspo: https://x.com/CJfromJBW/status/1952344669280407659 -->\n\n    <div class=\"action-bar\">\n      <button>\n        <span class=\"material-symbols-outlined\">person</span>\n      </button>\n      <button>\n        <span class=\"material-symbols-outlined\">push_pin</span>\n      </button>\n      <button class=\"selected\">\n        <span class=\"material-symbols-outlined\">alternate_email</span>\n      </button>\n      <button>\n        <span class=\"material-symbols-outlined\">mail</span>\n      </button>\n      <button>\n        <span class=\"material-symbols-outlined\">edit</span>\n      </button>\n      <button>\n        <span class=\"material-symbols-outlined\">cases</span>\n      </button>\n\n      <div class=\"anchored-pointer\"></div>\n    </div>\n\n    <!-- SVG filter for displacement -->\n    <svg width=\"0\" height=\"0\" aria-hidden=\"true\">\n      <filter id=\"filter\" color-interpolation-filters=\"linearRGB\" filterUnits=\"objectBoundingBox\" primitiveUnits=\"userSpaceOnUse\">\n        <feDisplacementMap in=\"SourceGraphic\" in2=\"SourceGraphic\" scale=\"5\" xChannelSelector=\"A\" yChannelSelector=\"A\" x=\"5\" y=\"-5\" width=\"100%\" height=\"100%\" result=\"displacementMap\" />\n      </filter>\n    </svg>\n\n    <script>\n      // Inlined from script.js\n      const buttons = document.querySelectorAll('button');\n      let selectedButton = document.querySelector('.selected');\n\n      const setAnchorOnSelected = () => {\n        if (selectedButton) {\n          selectedButton.style.anchorName = '--selected';\n        }\n      };\n\n      setAnchorOnSelected();\n\n      // button click handlers\n      buttons.forEach(button => {\n        button.addEventListener('click', () => {\n          if (selectedButton) {\n            selectedButton.classList.remove('selected');\n            selectedButton.style.anchorName = '';\n          }\n          selectedButton = button;\n          selectedButton.classList.add('selected');\n          setAnchorOnSelected();\n        });\n\n        // Hover and focus\n        const handleInteractionStart = () => {\n          if (button !== selectedButton) {\n            if (selectedButton) {\n              selectedButton.style.anchorName = '';\n            }\n            button.style.anchorName = '--selected';\n          }\n        };\n\n        button.addEventListener('mouseenter', handleInteractionStart);\n        button.addEventListener('focus', handleInteractionStart);\n\n        // Blur action\n        const handleInteractionEnd = () => {\n          if (button !== selectedButton) {\n            button.style.anchorName = '';\n            setAnchorOnSelected();\n          }\n        };\n\n        button.addEventListener('mouseleave', handleInteractionEnd);\n        button.addEventListener('blur', handleInteractionEnd);\n      });\n    </script>\n  </body>\n</html>"
  }
]
